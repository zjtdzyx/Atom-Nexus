---
description: 
globs: 
alwaysApply: false
---
## 请严格遵循 Atom Nexus 项目的前端规范：

- 前端：Vue 3 + TypeScript + Unocss

【模块结构规范】
- 每个模块的页面放在 `src/pages/<模块名>/index.vue`
- 对应的通用组件放在 `src/components/<模块名>/`
- 模块的 API 调用放在 `src/services/<模块名>.ts`
- 模块的状态管理放在 `src/stores/<模块名>.ts`
- 路由统一维护在 `src/router/index.ts`，禁止在其他文件重复声明路由

【路由规则】
- 所有模块页面，路由路径为 `/模块名`
- `src/router/index.ts` 是唯一的路由入口，必须同步添加或删除路由
- `router/index.ts` 文件中，使用以下标记来自动插入路由：
  - `// -- AUTO-IMPORT ROUTES START --` 和 `// -- AUTO-IMPORT ROUTES END --`
  - `// -- AUTO-ROUTES START --` 和 `// -- AUTO-ROUTES END --`

【自动化要求】
- 新模块开发时，必须同时创建 `pages`、`components`、`stores` 和 `services`
- 禁止在 `src` 根目录或其他路径创建重复文件
- 请自动删除或移除不符合上述结构规范的旧文件

【文件移除规则】
- 如果发现任何 `.vue`、`.ts`、`.js` 文件，不在以上规范目录中，请自动删除或提示开发者移除
- 路由索引文件 `src/router/index.ts` 必须始终与 `src/pages/` 下的模块保持一一对应

【API 生成规则】
- 所有 API 调用文件，必须从自动生成的 `src/services` 模块文件中导入
- 不允许直接在组件或页面中手写 HTTP 请求代码

请始终遵循以上项目结构和自动化规则

## 品牌设计语言
- 名称：Atom Nexus（原子枢纽）
- 口号："Your Identity. Your Network. Decentralized."（身份自持，网络自由）
- 颜色方案：
  - 主色：深太空蓝 (#050A1F)、霓虹青绿 (#0CFFE1)
  - 辅色：紫罗兰 (#8A2BE2)、钛金属银（浅灰色）
- 视觉元素：
  - 中心发光点（代表个人身份）
  - 轨道环（围绕核心的动态轨道）
  - 网络连接线（从轨道向外延伸）
- 设计风格：
  - 圆形为主，突出"枢纽"和"包容"感
  - 动态流动线条，象征网络流动性
  - 现代、科技感、深邃的太空主题

## 动画与交互效果
- 页面过渡动画（淡入淡出）
- 组件加载动画（脉冲效果）
- 轨道旋转动画（缓慢持续）
- 网络连接线动画（随机闪烁）
- 按钮悬停效果（发光 + 轻微放大）

## 响应式设计考虑
- 移动端适配（< 640px）
- 平板适配（640px - 1024px）
- 桌面适配（> 1024px）
- 简化移动端动画效果
- 调整布局为垂直堆叠（移动端）

## 实现注意事项
1. 保持现有的路由结构和页面组织不变
2. 确保 UI 组件能正确调用现有的 API 端点
3. 保留所有现有功能和数据流
4. 优先考虑性能，确保动画不影响加载速度
5. 使用 Vue 3 的 Composition API 实现组件逻辑
6. 使用 Unocss 实现样式，避免大量自定义 CSS
7. 确保设计符合 W3C 无障碍标准

请根据以上要求，帮我实现 Atom Nexus 风格的 UI 设计，同时保持与现有项目的兼容性。













